## Check for duplicates

-- Searching for duplicate values in the film table

SELECT title,
       release_year,
       language_id,
       rental_duration,
       rental_rate,
       length,
       replacement_cost,
       rating,
       COUNT(*)
FROM film
GROUP BY title,
         release_year,
         language_id,
         rental_duration,
         rental_rate,
         length,
         replacement_cost,
         rating
HAVING COUNT(*) >1;

-- Searching for duplicate values in the customer table

SELECT customer_id
     store_id,
     first_name,
	   last_name,
	   email,
	   address_id,
       COUNT(*)
FROM customer
GROUP BY customer_id
     store_id,
     first_name,
	   last_name,
	   email,
	   address_id
HAVING COUNT(*) >1;


## Calculating descriptive statistics

-- Film table numerical columns

SELECT 
MIN(rental_rate) AS min_renatl_rate,
MAX(rental_rate) AS max_rental_rate,
AVG(rental_rate) AS avg_renatal_rate,
MIN(rental_duration) AS min_rental_duration,
MAX(rental_duration) AS max_rental_duration,
AVG(rental_duration) AS avg_rental_duration,
MIN(replacement_cost) AS min_replacement_cost,
MAX(replacement_cost) AS max_replacement_cost,
AVG(replacement_cost) AS avg_replacement_cost,
MIN(length) AS min_length,
MAX(length) AS max_length,
AVG(length) AS avg_length
FROM film;

-- Film table non-numeric columns

SELECT
mode() WITHIN GROUP (ORDER BY rating)
AS rating_value,
mode() WITHIN GROUP (ORDER BY release_year)
AS year_value,
mode() WITHIN GROUP (ORDER BY title)
AS title_value,
FROM film;

-- Customer table numerical columns 

SELECT 
MIN(address_id) AS min_address,
MAX(address_id) AS max_address,
AVG(address_id) AS avg_address,
MIN(customer_id) AS min_customer,
MAX(customer_id) AS max_customer,
AVG(customer_id) AS avg_customer,
MIN(store_id) AS min_store,
MAX(store_id) AS max_store,
AVG(store_id) AS avg_store
FROM customer;

-- Customer table non-numeric columns

SELECT
 mode() WITHIN GROUP (ORDER BY first_name)
AS first_name_value,
mode() WITHIN GROUP (ORDER BY last_name)
AS last_name_value,
mode() WITHIN GROUP (ORDER BY email)
AS email_value,
FROM customer;


## Analysis

-- Find the top 10 countries for Rockbuster in terms of customer numbers

SELECT D.country,
COUNT(A.customer_id) AS "customer_number"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
GROUP BY country
ORDER BY customer_number DESC
LIMIT 10

-- Find the top 10 cities within the top 10 countries identified above

SELECT C.city,
COUNT(A.customer_id) AS "customer_number"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_Id = D.country_Id
WHERE country IN
('India',
'China'
'United States',
'Japan',
'Mexico',
'Brazil',
'Russian Federation',
'Philippines',
'Turkey',
'Indonesia')
GROUP BY city
ORDER BY customer_number DESC
LIMIT 10

-- Find the top 5 customers in the top 10 cities who have paid the highest total amounts to Rockbuster

SELECT A.customer_id,
A.first_name,
A.last_name,
C.city,
D.country,
SUM(E.amount) AS "total_amount_paid"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
INNER JOIN payment E ON A.customer_id = E.customer_id
WHERE city IN ('Aurora',' Shimoga', 'Aparecida de Goinia', 'Emeishan', 'Pontianak', 'Tarsus', 'Atlixco', 'Zalantun', 'Rio Claro', 'Tokat')
GROUP BY A.customer_id, C.city, D.country
ORDER BY total_amount_paid DESC
LIMIT 5

-- Find the average amount paid by the top 5 customers.

SELECT AVG(total_amount_paid) AS average
FROM
(SELECT A.customer_id,
A.first_name,
A.last_name,
C.city,
D.country,
SUM(E. amount) AS total_amount_paid
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_ID = D.country_ID
INNER JOIN payment E ON A.customer_id = E.customer_id
WHERE city IN ('Aurora','Tokat','Tarsus',
'Atlixco','Emeishan','Pontianak','Shimoga','Aparecida de Goinia',
'Zalantun','Taguig')
GROUP BY A.customer_id, C.city, D.country
ORDER BY total_amount_paid DESC
LIMIT 5) AS total_amount_paid

-- Find out how many of the top 5 customers are based within each country.

SELECT D. country, COUNT (DISTINCT A.customer_id) AS all_customer_count, 
COUNT (DISTINCT D.country) AS top_customer_count
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_ID = D.country_ID
    LEFT JOIN (SELECT A.customer_id,
    A.first_name,
    A.last_name,
    C.city,
    D.country,
    SUM(E. amount) AS total_amount_paid
    FROM customer A
    INNER JOIN address B ON A.address_id = B.address_id
    INNER JOIN city C ON B.city_id = C.city_id
    INNER JOIN country D ON C.country_ID = D.country_ID
    INNER JOIN payment E ON A.customer_id = E.customer_id
    WHERE city IN ('Aurora','Tokat','Tarsus','Atlixco','Emeishan','Pontianak','Shimoga','Aparecida de Goinia','Zalantun','Taguig')
    GROUP BY A.customer_id, C.city, D.country
    ORDER BY total_amount_paid DESC
    LIMIT 5) AS top_5_customers ON D.country= top_5_customers.country
GROUP BY D.country
ORDER BY all_customer_count DESC
LIMIT 5

-- Now use a CTE to find out how many of the top 5 customers are based within each country

WITH top_customers_CTE (customer_id, first_name, last_name, city, country, total_amount_paid) AS 
	(SELECT A.customer_id,
	A.first_name,
	A.last_name,
	C.city,
	D.country,
	SUM(E.amount) AS total_amount_paid
	FROM customer A
	INNER JOIN address B ON A.address_id = B.address_id
	INNER JOIN city C ON B.city_id = C.city_id
	INNER JOIN country D ON C.country_id = D.country_id
	INNER JOIN payment E ON A.customer_id = E.customer_id
	WHERE city in ('Aurora',' Shimoga', 'Aparecida de Goinia', 'Emeishan', 'Pontianak', 'Tarsus', 'Atlixco', 'Zalantun', 'Rio Claro', 'Tokat')
	 AND D.country IN ('India', 'China', 'United States', 'Japan', 'Mexico', 'Brazil', 'Russian Federation', 'Philippines', 'Turkey', 'Indonesia')
	 GROUP BY 
	 A.customer_id,
	 D.country,
	 C.city
	 ORDER BY total_amount_paid DESC
	 LIMIT 5) 
	

SELECT D.country,
	 COUNT (DISTINCT A.customer_id) AS all_customer_count,
	 COUNT (DISTINCT D.country) AS top_customer_count
	 FROM customer A
	 INNER JOIN address B ON A.address_id = B.address_id
	 INNER JOIN city C ON B.city_id = C.city_id
	 INNER JOIN country D ON C.country_id = D.country_id
   LEFT JOIN top_customers_CTE ON D.country = top_customers_CTE.country
	 GROUP BY D.country
	 ORDER BY all_customer_count DESC
	 LIMIT 5
